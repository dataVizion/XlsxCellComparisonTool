package com.vatsytech.ui;

import com.vatsytech.office.ExcelCell;
import com.vatsytech.office.ExcelCellRenderer;
import com.vatsytech.office.ExcelTableModel;
import com.vatsytech.office.OfficeUtils;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class ResultFrameTEST extends javax.swing.JFrame {
    
    private TableModel model;

    /**
     * Creates new form ResultFrame
     */
    public ResultFrameTEST() {
        initComponents();
        model=(TableModel) tblRes.getModel();
        //tblRes.setModel(model);
    }
    
    public ResultFrameTEST(Map<String,String> m) {                
        initComponents();        
        this.setModel(m);
        tblRes.setModel(model);
    }
    
    public ResultFrameTEST(ExcelCell[][] m) {                
        this.setModel(m);
        initComponents();        
        tblRes.setDefaultRenderer(ExcelCell.class, new ExcelCellRenderer());
        tblRes.setModel(model);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblRes.setAutoCreateRowSorter(true);
        tblRes.setModel(getModel());
        tblRes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblRes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tblRes);
        tblRes.getAccessibleContext().setAccessibleParent(jScrollPane2);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultFrameTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultFrameTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultFrameTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultFrameTEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultFrameTEST().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblRes;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the model
     */
    public TableModel getModel() {
        return model;
    }

    /**
     * @param m
     */
    public void setModel(Map<String,String> m) {
        DefaultTableModel  mod = new DefaultTableModel(new Object[] { "Key", "Value" }, 0);
        Set<Entry<String, String>> setHm = m.entrySet();
        Iterator<Entry<String, String>> it = setHm.iterator();
        while(it.hasNext()){
            Entry<String, String> e = it.next();
            mod.insertRow(mod.getRowCount(),new Object[]{e.getKey(),e.getValue()});
        }
        this.model = mod;
    }
    
    
    public void setModel(ExcelCell[][] data) {
        /*Object[][] data = {   
      {"Cysboy", "646", "sdf", "ez"},
      {"BZHHydde", "", new Double(1.78), new Boolean(false)},
      {"IamBow", "", new Double(1.90), new Boolean(false)},
      {"FunMan", "", new Double(1.85), new Boolean(true)}
    };*/
        
        
        String[] title=new String[data[0].length];
        for(int i=0;i<data[0].length;i++) title[i]=OfficeUtils.getInstance().getCollName(i);
        System.out.println("Number of rows = "+data.length);
        ExcelTableModel  mod = new ExcelTableModel((ExcelCell[][])data, title);        
        this.model = mod;        
    }
}
